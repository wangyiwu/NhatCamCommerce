@model FooterModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@using Nop.Core.Domain.Topics
@using Nop.Services.Common
@using Nop.Services.Configuration

@inject IWorkContext workContext
@inject IStoreContext _storeContext
@inject ISettingService _settingService
@* *@
@* <div class="footer"> *@
@*     <div class="px_footer_upper"> *@
@*         <div class="footer-upper"> *@
@*             <div class="footer-block information"> *@
@*                 <div class="title"> *@
@*                     <strong>@T("Footer.Information")</strong> *@
@*                 </div> *@
@*                 <ul class="list"> *@
@*                     @if (Model.SitemapEnabled && Model.DisplaySitemapFooterItem) *@
@*                     { *@
@*                         <li><a href="@Url.RouteUrl("Sitemap")">@T("Sitemap")</a></li> *@
@*                     } *@
@*                     @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn1).ToList()) *@
@*                     { *@
@*                         <li><a href="@(Url.RouteUrl<Topic>(new { SeName = topic.SeName }))">@topic.Name</a></li> *@
@*                     } *@
@*                     @if (Model.DisplayContactUsFooterItem) *@
@*                     { *@
@*                         <li><a href="@Url.RouteUrl("ContactUs")">@T("ContactUs")</a></li> *@
@*                     } *@
@*                 </ul> *@
@*             </div> *@
@*             <div class="footer-block customer-service"> *@
@*                 <div class="title"> *@
@*                     <strong>@T("Footer.CustomerService")</strong> *@
@*                 </div> *@
@*                 <ul class="list"> *@
@*                     @if (Model.SearchEnabled && Model.DisplayProductSearchFooterItem) *@
@*                     { *@
@*                         <li><a href="@Url.RouteUrl("ProductSearch")">@T("Search")</a> </li> *@
@*                     } *@
@*                     @if (Model.NewsEnabled && Model.DisplayNewsFooterItem) *@
@*                     { *@
@*                         <li><a href="@Url.RouteUrl("NewsArchive")">@T("News")</a></li> *@
@*                     } *@
@*                     @if (Model.BlogEnabled && Model.DisplayBlogFooterItem) *@
@*                     { *@
@*                         <li><a href="@Url.RouteUrl("Blog")">@T("Blog")</a></li> *@
@*                     } *@
@*                     @if (Model.ForumEnabled && Model.DisplayForumsFooterItem) *@
@*                     { *@
@*                         <li><a href="@Url.RouteUrl("Boards")">@T("Forum.Forums")</a></li> *@
@*                     } *@
@*                     @if (Model.RecentlyViewedProductsEnabled && Model.DisplayRecentlyViewedProductsFooterItem) *@
@*                     { *@
@*                         <li><a href="@Url.RouteUrl("RecentlyViewedProducts")">@T("Products.RecentlyViewedProducts")</a></li> *@
@*                     } *@
@*                     @if (Model.CompareProductsEnabled && Model.DisplayCompareProductsFooterItem) *@
@*                     { *@
@*                         <li><a href="@Url.RouteUrl("CompareProducts")">@T("Products.Compare.List")</a></li> *@
@*                     } *@
@*                     @if (Model.NewProductsEnabled && Model.DisplayNewProductsFooterItem) *@
@*                     { *@
@*                         <li><a href="@Url.RouteUrl("NewProducts")">@T("Products.NewProducts")</a></li> *@
@*                     } *@
@*                     @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn2).ToList()) *@
@*                     { *@
@*                         <li><a href="@(Url.RouteUrl<Topic>(new { SeName = topic.SeName }))">@topic.Name</a></li> *@
@*                     } *@
@*                     @if (Model.AllowCustomersToCheckGiftCardBalance) *@
@*                     { *@
@*                         <li><a href="@Url.RouteUrl("CheckGiftCardBalance")">@T("CheckGiftCardBalance")</a></li> *@
@*                     } *@
@*                 </ul> *@
@*             </div> *@
@*             <div class="footer-block follow-us"> *@
@*                 <div class="footer_px_logo"> *@
@*                     @await Component.InvokeAsync(typeof(LogoViewComponent)) *@
@*                 </div> *@
@*                 @await Component.InvokeAsync(typeof(NewsletterBoxViewComponent)) *@
@* *@
@*             </div> *@
@*             <div class="footer-block my-account"> *@
@*                 <div class="title"> *@
@*                     <strong>@T("Footer.MyAccount")</strong> *@
@*                 </div> *@
@*                 <ul class="list"> *@
@*                     @if (Model.DisplayCustomerInfoFooterItem) *@
@*                     { *@
@*                         <li><a href="@Url.RouteUrl("CustomerInfo")">@T("Account.MyAccount")</a></li> *@
@*                     } *@
@*                     @if (Model.DisplayCustomerOrdersFooterItem) *@
@*                     { *@
@*                         <li><a href="@Url.RouteUrl("CustomerOrders")">@T("Account.CustomerOrders")</a></li> *@
@*                     } *@
@*                     @if (Model.DisplayCustomerAddressesFooterItem) *@
@*                     { *@
@*                         <li><a href="@Url.RouteUrl("CustomerAddresses")">@T("Account.CustomerAddresses")</a></li> *@
@*                     } *@
@*                     @if (Model.ShoppingCartEnabled && Model.DisplayShoppingCartFooterItem) *@
@*                     { *@
@*                         <li><a href="@Url.RouteUrl("ShoppingCart")">@T("ShoppingCart")</a></li> *@
@*                     } *@
@*                     @if (Model.WishlistEnabled && Model.DisplayWishlistFooterItem) *@
@*                     { *@
@*                         <li><a href="@Url.RouteUrl("Wishlist")">@T("Wishlist")</a></li> *@
@*                     } *@
@*                     @if (Model.AllowCustomersToApplyForVendorAccount && Model.DisplayApplyVendorAccountFooterItem) *@
@*                     { *@
@*                         <li><a href="@Url.RouteUrl("ApplyVendorAccount")">@T("Vendors.ApplyAccount")</a></li> *@
@*                     } *@
@*                     @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn3).ToList()) *@
@*                     { *@
@*                         <li><a href="@(Url.RouteUrl<Topic>(new { SeName = topic.SeName }))">@topic.Name</a></li> *@
@*                     } *@
@*                 </ul> *@
@*             </div> *@
@*             <div class="footer-block my-account"> *@
@*                 <div class="title"> *@
@*                     <strong>@T("Theme.Phoenix.Footer.Followus.title")</strong> *@
@*                 </div> *@
@*                 <div class="list"> *@
@*                     <div class="social"> *@
@*                         @await Component.InvokeAsync(typeof(SocialButtonsViewComponent)) *@
@*                     </div> *@
@*                 </div> *@
@*                 <div class="px-payment"> *@
@*                     <div class="title"> *@
@*                         <strong>@T("Theme.Phoenix.Footer.Payment.Option.title")</strong> *@
@*                     </div> *@
@*                     <div class="list"> *@
@*                         <img src="@Url.Content("~/Themes/Phoenix/Content/images/payment.png")" alt="" /> *@
@*                     </div> *@
@*                 </div> *@
@*             </div> *@
@*         </div> *@
@*         <div class="footer-lower"> *@
@*             <div class="footer-info"> *@
@*                 <span class="footer-disclaimer">@T("Content.CopyrightNotice", DateTime.Now.Year, Model.StoreName)</span> *@
@*                 @if (Model.DisplayTaxShippingInfoFooter) *@
@*                 { *@
@*                     var inclTax = await workContext.GetTaxDisplayTypeAsync() == TaxDisplayType.IncludingTax; *@
@*                     <span class="footer-tax-shipping"> *@
@*                         @T(inclTax ? "Footer.TaxShipping.InclTax" : "Footer.TaxShipping.ExclTax", Url.RouteTopicUrl("shippinginfo")) *@
@*                     </span> *@
@*                 } *@
@*             </div> *@
@* *@
@*             @await Component.InvokeAsync(typeof(StoreThemeSelectorViewComponent)) *@
@*         </div> *@
@*         @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.Footer }) *@
@*     </div> *@
@*     <div class="px-footer-lines"> *@
@*         <div class="line"></div> *@
@*         <div class="line"></div> *@
@*         <div class="line"></div> *@
@*         <div class="line"></div> *@
@*     </div> *@
@* </div> *@
@* *@
@* <script asp-location="Footer"> *@
@*     $(document).ready(function () { *@
@*         $('.footer-block .title').on('click', function () { *@
@*             var e = window, a = 'inner'; *@
@*             if (!('innerWidth' in window)) { *@
@*                 a = 'client'; *@
@*                 e = document.documentElement || document.body; *@
@*             } *@
@*             var result = { width: e[a + 'Width'], height: e[a + 'Height'] }; *@
@*             if (result.width < 1025) { *@
@*                 $(this).siblings('.list').slideToggle('slow'); *@
@*             } *@
@*         }); *@
@*     }); *@
@* *@
@*     $(document).ready(function () { *@
@*         $('.block .title').on('click', function () { *@
@*             var e = window, a = 'inner'; *@
@*             if (!('innerWidth' in window)) { *@
@*                 a = 'client'; *@
@*                 e = document.documentElement || document.body; *@
@*             } *@
@*             var result = { width: e[a + 'Width'], height: e[a + 'Height'] }; *@
@*             /*if (result.width < 1025) {*/ *@
@*             $(this).siblings('.listbox').slideToggle('slow'); *@
@*             /*}*/ *@
@*         }); *@
@*     }); *@
@* </script> *@
